{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}


module Proto.Google.Protobuf.FieldOptions.OptionTargetType exposing
    ( OptionTargetType(..), decodeOptionTargetType, defaultOptionTargetType, encodeOptionTargetType, fieldNumbersOptionTargetType
    , jsonDecodeOptionTargetType, jsonEncodeOptionTargetType
    )

{-| This file was automatically generated by

  - [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.1
  - `protoc` 4.22.2
  - the following specification files: `google/protobuf/descriptor.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs OptionTargetType, decodeOptionTargetType, defaultOptionTargetType, encodeOptionTargetType, fieldNumbersOptionTargetType

@docs jsonDecodeOptionTargetType, jsonEncodeOptionTargetType

-}

import Json.Decode
import Json.Encode
import Protobuf.Decode
import Protobuf.Encode
import Protobuf.Utils.Int32


{-| Decode a `OptionTargetType` from JSON. Uses the canonical encoding described here: <https://protobuf.dev/programming-guides/proto3/#json>
-}
jsonDecodeOptionTargetType : Json.Decode.Decoder OptionTargetType
jsonDecodeOptionTargetType =
    Json.Decode.oneOf
        [ Json.Decode.string
            |> Json.Decode.map
                (\i ->
                    case i of
                        "TARGET_TYPE_UNKNOWN" ->
                            TARGETTYPEUNKNOWN

                        "TARGET_TYPE_FILE" ->
                            TARGETTYPEFILE

                        "TARGET_TYPE_EXTENSION_RANGE" ->
                            TARGETTYPEEXTENSIONRANGE

                        "TARGET_TYPE_MESSAGE" ->
                            TARGETTYPEMESSAGE

                        "TARGET_TYPE_FIELD" ->
                            TARGETTYPEFIELD

                        "TARGET_TYPE_ONEOF" ->
                            TARGETTYPEONEOF

                        "TARGET_TYPE_ENUM" ->
                            TARGETTYPEENUM

                        "TARGET_TYPE_ENUM_ENTRY" ->
                            TARGETTYPEENUMENTRY

                        "TARGET_TYPE_SERVICE" ->
                            TARGETTYPESERVICE

                        "TARGET_TYPE_METHOD" ->
                            TARGETTYPEMETHOD

                        _ ->
                            TARGETTYPEUNKNOWN
                )
        , Protobuf.Utils.Int32.int32JsonDecoder
            |> Json.Decode.map
                (\i ->
                    case i of
                        0 ->
                            TARGETTYPEUNKNOWN

                        1 ->
                            TARGETTYPEFILE

                        2 ->
                            TARGETTYPEEXTENSIONRANGE

                        3 ->
                            TARGETTYPEMESSAGE

                        4 ->
                            TARGETTYPEFIELD

                        5 ->
                            TARGETTYPEONEOF

                        6 ->
                            TARGETTYPEENUM

                        7 ->
                            TARGETTYPEENUMENTRY

                        8 ->
                            TARGETTYPESERVICE

                        9 ->
                            TARGETTYPEMETHOD

                        _ ->
                            TARGETTYPEUNKNOWN
                )
        ]


{-| Encode a `OptionTargetType` to JSON. Uses the canonical encoding described here: <https://protobuf.dev/programming-guides/proto3/#json>
-}
jsonEncodeOptionTargetType : OptionTargetType -> Json.Encode.Value
jsonEncodeOptionTargetType value =
    Json.Encode.string <|
        case value of
            TARGETTYPEUNKNOWN ->
                "TARGET_TYPE_UNKNOWN"

            TARGETTYPEFILE ->
                "TARGET_TYPE_FILE"

            TARGETTYPEEXTENSIONRANGE ->
                "TARGET_TYPE_EXTENSION_RANGE"

            TARGETTYPEMESSAGE ->
                "TARGET_TYPE_MESSAGE"

            TARGETTYPEFIELD ->
                "TARGET_TYPE_FIELD"

            TARGETTYPEONEOF ->
                "TARGET_TYPE_ONEOF"

            TARGETTYPEENUM ->
                "TARGET_TYPE_ENUM"

            TARGETTYPEENUMENTRY ->
                "TARGET_TYPE_ENUM_ENTRY"

            TARGETTYPESERVICE ->
                "TARGET_TYPE_SERVICE"

            TARGETTYPEMETHOD ->
                "TARGET_TYPE_METHOD"


{-| The field numbers for the fields of `OptionTargetType`. This is mostly useful for internals, like documentation generation.
-}
fieldNumbersOptionTargetType : OptionTargetType -> Int
fieldNumbersOptionTargetType n_ =
    case n_ of
        TARGETTYPEUNKNOWN ->
            0

        TARGETTYPEFILE ->
            1

        TARGETTYPEEXTENSIONRANGE ->
            2

        TARGETTYPEMESSAGE ->
            3

        TARGETTYPEFIELD ->
            4

        TARGETTYPEONEOF ->
            5

        TARGETTYPEENUM ->
            6

        TARGETTYPEENUMENTRY ->
            7

        TARGETTYPESERVICE ->
            8

        TARGETTYPEMETHOD ->
            9


{-| Default for OptionTargetType. Should only be used for 'required' decoders as an initial value.
-}
defaultOptionTargetType : OptionTargetType
defaultOptionTargetType =
    TARGETTYPEUNKNOWN


{-| Declares how to encode a `OptionTargetType` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.
-}
encodeOptionTargetType : OptionTargetType -> Protobuf.Encode.Encoder
encodeOptionTargetType value =
    Protobuf.Encode.int32 <|
        case value of
            TARGETTYPEUNKNOWN ->
                0

            TARGETTYPEFILE ->
                1

            TARGETTYPEEXTENSIONRANGE ->
                2

            TARGETTYPEMESSAGE ->
                3

            TARGETTYPEFIELD ->
                4

            TARGETTYPEONEOF ->
                5

            TARGETTYPEENUM ->
                6

            TARGETTYPEENUMENTRY ->
                7

            TARGETTYPESERVICE ->
                8

            TARGETTYPEMETHOD ->
                9


{-| Declares how to decode a `OptionTargetType` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.
-}
decodeOptionTargetType : Protobuf.Decode.Decoder OptionTargetType
decodeOptionTargetType =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        TARGETTYPEUNKNOWN

                    1 ->
                        TARGETTYPEFILE

                    2 ->
                        TARGETTYPEEXTENSIONRANGE

                    3 ->
                        TARGETTYPEMESSAGE

                    4 ->
                        TARGETTYPEFIELD

                    5 ->
                        TARGETTYPEONEOF

                    6 ->
                        TARGETTYPEENUM

                    7 ->
                        TARGETTYPEENUMENTRY

                    8 ->
                        TARGETTYPESERVICE

                    9 ->
                        TARGETTYPEMETHOD

                    _ ->
                        TARGETTYPEUNKNOWN
            )


{-| `OptionTargetType` enumeration
-}
type OptionTargetType
    = TARGETTYPEUNKNOWN
    | TARGETTYPEFILE
    | TARGETTYPEEXTENSIONRANGE
    | TARGETTYPEMESSAGE
    | TARGETTYPEFIELD
    | TARGETTYPEONEOF
    | TARGETTYPEENUM
    | TARGETTYPEENUMENTRY
    | TARGETTYPESERVICE
    | TARGETTYPEMETHOD
